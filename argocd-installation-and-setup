
--------------
1.kubectl create namespace argocd

2.kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

3.kubectl get all-n argocd

4.Create service account: kubectl create sa sarthak
Kubernetes service accounts let you give an identity to your Pods, which can be used to: Authenticate Pods to the Kubernetes API server,
allowing the Pods to read and manipulate Kubernetes API objects (for example, a CI/CD pipeline that deploys applications to your cluster).


Giveing permissions to the user: kubectl create clusterrolebinding user_name-binding --clusterrole=cluster_role_name --serviceaccount=namespace:user_name 
kubectl create clusterrolebinding sarthak-binding --clusterrole=cluster_role_name --serviceaccount=namespace:user_name

5.kubectl create clusterrolebinding sarthak-binding --clusterrole=cluster-admin --user=sarthak@gmail.com

6.kubectl patch svc argocd-server -n argocd -p "("spec": ("type": "Loadbalancer"))" 
For Nodeport: kubectl patch svc argocd-server -p '{"spec": {"type": "NodePort"}}' -n argocd
For Loadbalancer: kubectl patch svc argocd-server -n argocd -p "("spec": {"type": "LoadBalancer"}}

7. kubectl get svc -n argocd
8. Access the argocd server
9. username: admin
password: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d #RuFFoXVsTeDdJTEK





Get the password: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
---------------
automatic (do not use manual)
github url: https://github.com/sart-glitch/myrepoargocd.git
Revision: head
path: guestbook

kubectl get all -n saru

path the cluster ip of guestbook app.
kubectl patch svc guestbook-ui -p '{"spec": {"type": "NodePort"}}' -n saru

----------------------------------------

change the password of argocd admin
+++++++++++++++++++++
Go inside the argocd pod: kubectl exec -it argocd-server-76fdbd5f78-szxq5 /bin/bash -n argocd

Get old password: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d

argocd login 35.160.33.78:31515

argocd account update-password











